{
  "hash": "9ec918d988f18e9573ce7c4c9d293054",
  "result": {
    "engine": "knitr",
    "markdown": "# Module 1.5: Why Visualize Your Data?\n\n\"A picture is worth a thousand words\" - this is especially true for data! Plots help us to:\n\n-   **Explore:** Understand the distribution of your traits (e.g., `Yield`, `Height`). See relationships between variables. Identify patterns.\n-   **Diagnose:** Spot potential problems like outliers (strange values) or unexpected groupings. Check assumptions of statistical models.\n-   **Communicate:** Clearly present your findings to colleagues, managers, or in publications.\n\n## Introducing `ggplot2`: The Grammar of Graphics\n\nR has basic plotting functions, but we will focus on the **`ggplot2`** package, which is part of the `tidyverse`. It's extremely powerful and flexible for creating beautiful, publication-quality graphics.\n\n`ggplot2` is based on the **Grammar of Graphics**. The idea is to build plots layer by layer:\n\n1.  **`ggplot()` function:** Start the plot. You provide:\n    -   `data`: The data frame containing your variables.\n    -   `mapping = aes(...)`: **Aesthetic mappings**. This tells `ggplot` *how variables in your data map to visual properties* of the plot (e.g., map `Yield` to the y-axis, `Height` to the x-axis, `Variety` to color).\n2.  **`geom_` functions:** Add geometric layers to actually *display* the data. Examples:\n    -   `geom_point()`: Creates a scatter plot.\n    -   `geom_histogram()`: Creates a histogram.\n    -   `geom_boxplot()`: Creates box-and-whisker plots.\n    -   `geom_line()`: Creates lines.\n    -   `geom_bar()`: Creates bar charts.\n3.  **Other functions:** Add labels (`labs()`), change themes (`theme_bw()`, `theme_minimal()`), split plots into facets (`facet_wrap()`), customize scales, etc. Each function also allows you to edit aesthetic characteristics such as size, color, etc.\n\n## Let's Make Some Plots!\n\nFirst, load the necessary libraries:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr) # Often used with ggplot2 for data prep\n```\n:::\n\n\n\n\n\n\nNow, let's create a sample breeding data frame for plotting.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123) # for reproducible random numbers\nbreeding_plot_data <-\n  tibble(\n    PlotID = paste0(\"P\", 101:120),\n    Variety = factor(rep(c(\"ICARDA_A\", \"ICARDA_B\", \"Check_1\", \"Check_2\"), each = 5)),\n    Location = factor(rep(c(\"Baku\", \"Ganja\"), each = 10)),\n    Yield = rnorm(20, mean = rep(c(6, 7, 5, 5.5), each = 5), sd = 0.8),\n    Height = rnorm(20, mean = rep(c(90, 110, 85, 88), each = 5), sd = 5)\n  )\n\n# Take a quick look at the data structure\nglimpse(breeding_plot_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 20\nColumns: 5\n$ PlotID   <chr> \"P101\", \"P102\", \"P103\", \"P104\", \"P105\", \"P106\", \"P107\", \"P108…\n$ Variety  <fct> ICARDA_A, ICARDA_A, ICARDA_A, ICARDA_A, ICARDA_A, ICARDA_B, I…\n$ Location <fct> Baku, Baku, Baku, Baku, Baku, Baku, Baku, Baku, Baku, Baku, G…\n$ Yield    <dbl> 5.551619, 5.815858, 7.246967, 6.056407, 6.103430, 8.372052, 7…\n$ Height   <dbl> 84.66088, 88.91013, 84.86998, 86.35554, 86.87480, 101.56653, …\n```\n\n\n:::\n:::\n\n\n\n\n\n\n### 1. Scatter Plot: Relationship between Yield and Height\n\nSee if taller plants tend to have higher yield in this dataset.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. ggplot(): data is breeding_plot_data, map Height to x, Yield to y\n# 2. geom_point(): Add points layer\n# 3. labs() and theme_bw(): Add labels and theme\nplot1 <-\n  ggplot(data = breeding_plot_data, mapping = aes(x = Height, y = Yield)) +\n  geom_point() +\n  labs(\n    title = \"Relationship between Plant Height and Yield\",\n    x = \"Plant Height (cm)\",\n    y = \"Yield (kg/plot)\",\n    caption = \"Sample Data\"\n  ) +\n  theme_bw() # Use a clean black and white theme\n\n# Display the plot\nplot1\n```\n\n::: {.cell-output-display}\n![Relationship between Plant Height and Yield.](05_Simple_Plotting_files/figure-html/scatter-basic-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nLet's color the points by Variety:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Map 'color' aesthetic to the Variety column\n# Adjust point size and transparency for better visibility\nplot2 <-\n  ggplot(data = breeding_plot_data, mapping = aes(x = Height, y = Yield, color = Variety)) +\n  geom_point(size = 2.5, alpha = 0.8) + # Make points slightly bigger, semi-transparent\n  labs(\n    title = \"Height vs. Yield by Variety\",\n    x = \"Plant Height (cm)\",\n    y = \"Yield (kg/plot)\"\n  ) +\n  theme_minimal() # Use a different theme\n\n# Display the plot\nplot2\n```\n\n::: {.cell-output-display}\n![Height vs. Yield by Variety, colored by Variety.](05_Simple_Plotting_files/figure-html/scatter-color-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n### 2. Histogram: Distribution of Yield\n\nSee the frequency of different yield values.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. ggplot(): data, map Yield to x-axis\n# 2. geom_histogram(): Add histogram layer. Adjust 'binwidth' or 'bins'.\n# 3. labs() and theme_classic(): Add labels and theme\nplot3 <-\n  ggplot(data = breeding_plot_data, mapping = aes(x = Yield)) +\n  geom_histogram(binwidth = 0.5, fill = \"lightblue\", color = \"black\") + # Specify binwidth, fill, and outline color\n  labs(\n    title = \"Distribution of Plot Yields\",\n    x = \"Yield (kg/plot)\",\n    y = \"Frequency (Number of Plots)\"\n  ) +\n  theme_classic()\n\n# Display the plot\nplot3\n```\n\n::: {.cell-output-display}\n![Distribution of Plot Yields.](05_Simple_Plotting_files/figure-html/histogram-yield-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n### 3. Box Plot: Compare Yield across Locations\n\nAre yields different in Baku vs. Ganja? Box plots are great for comparing distributions across groups.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. ggplot(): data, map Location (categorical) to x, Yield (numeric) to y\n# 2. geom_boxplot(): Add boxplot layer. Map 'fill' to Location for color.\n# 3. labs() and theme_light(): Add labels and theme\n# 4. theme(): Customize theme elements (e.g., remove legend)\nplot4 <-\n  ggplot(data = breeding_plot_data, mapping = aes(x = Location, y = Yield, fill = Location)) +\n  geom_boxplot() +\n  labs(\n    title = \"Yield Comparison by Location\",\n    x = \"Location\",\n    y = \"Yield (kg/plot)\"\n  ) +\n  theme_light() +\n  theme(legend.position = \"none\") # Hide legend if coloring is obvious from x-axis\n\n# Display the plot\nplot4\n```\n\n::: {.cell-output-display}\n![Yield Comparison by Location.](05_Simple_Plotting_files/figure-html/boxplot-location-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\nBox plot anatomy: The box shows the interquartile range (IQR, middle 50% of data), the line inside is the median, whiskers extend typically 1.5\\*IQR, points beyond are potential outliers.\n\n## Saving Your Plots\n\nUse the `ggsave()` function after you've created a ggplot object (like plot1, plot2, etc.).\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make sure the 'output/figures' directory exists\n# The 'recursive = TRUE' creates parent directories if needed\noutput_dir <- \"output/figures\"\nif (!dir.exists(output_dir)) {\n  dir.create(output_dir, recursive = TRUE)\n}\n\n# Save the height vs yield scatter plot (plot2)\nggsave(\n  filename = file.path(output_dir, \"height_yield_scatter.png\"), # Use file.path for robust paths\n  plot = plot2,                               # The plot object to save\n  width = 7,                                  # Width in inches\n  height = 5,                                 # Height in inches\n  dpi = 300                                   # Resolution (dots per inch)\n)\n\n# You can save in other formats too, like PDF:\n# ggsave(\n#   filename = file.path(output_dir, \"yield_distribution.pdf\"),\n#   plot = plot3,\n#   width = 6,\n#   height = 4\n# )\n```\n:::\n\n\n\n\n\n\n## Exercise\n\nCreate a box plot comparing Plant Height (`Height`) across the different Varieties (`Variety`) in the `breeding_plot_data`. Save the plot as a PNG file named `height_variety_boxplot.png` in the `output/figures` directory.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exercise: Box plot comparing Plant Height across Varieties\nplot5 <-\n  ggplot(data = breeding_plot_data, mapping = aes(x = Variety, y = Height, fill = Variety)) +\n  geom_boxplot() +\n  labs(\n    title = \"Plant Height Comparison by Variety\",\n    x = \"Variety\",\n    y = \"Plant Height (cm)\"\n   ) +\n  theme_light() +\n  theme(legend.position = \"none\")\n\n# Display the new plot\nplot5\n```\n\n::: {.cell-output-display}\n![Plant Height Comparison by Variety.](05_Simple_Plotting_files/figure-html/exercise-boxplot-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure output directory exists\noutput_dir <- \"output/figures\"\nif (!dir.exists(output_dir)) {\n  dir.create(output_dir, recursive = TRUE)\n}\n\n# Save the box plot as a PNG file\nggsave(\n  filename = file.path(output_dir, \"height_variety_boxplot.png\"),\n  plot = plot5,\n  width = 7,\n  height = 5,\n  dpi = 300\n)\n```\n:::\n",
    "supporting": [
      "05_Simple_Plotting_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}